{"version":3,"sources":["assets/JackHuResume.pdf","assets/icons/github.svg","assets/icons/linkedin.svg","assets/icons/profile.svg","assets/icons/down.svg","assets/me.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","props","IntroWindow","width","height","windowControls","useAnimation","textControls","logoControls","start","opacity","transition","ease","duration","delay","y","className","div","initial","animate","h1","p","href","img","src","linkedin","github","resume","profile","down","loop","state","updateWindowDimensions","bind","this","window","addEventListener","removeEventListener","dimensions","innerWidth","innerHeight","setState","style","display","justifyContent","alignItems","flexDirection","maxWidth","h2","flex","borderRadius","margin","resize","me","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a12591cd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/JackHuResume.b1bab688.pdf\";","module.exports = __webpack_public_path__ + \"static/media/github.0e6e51cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.19e539a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile.5aceb5ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/down.399ce17b.svg\";","module.exports = __webpack_public_path__ + \"static/media/me.e3922b03.jpg\";","//Component imports\nimport React, { Component } from 'react';\nimport { motion, useAnimation, motionValue, useTransform } from 'framer-motion';\n\n//Give it some style!\nimport './App.css';\n\n//Asset imports\nimport resume from './assets/JackHuResume.pdf';\nimport github from './assets/icons/github.svg';\nimport linkedin from './assets/icons/linkedin.svg';\nimport profile from './assets/icons/profile.svg';\nimport down from './assets/icons/down.svg';\nimport me from './assets/me.jpg';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { width: 0, height: 0 };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    let dimensions = {\n      width: window.innerWidth\n    };\n    dimensions.height = window.innerHeight > 600 ? window.innerHeight : 600;\n    this.setState(dimensions);\n  }\n\n  IntroWindow = (props) => {\n    let { width, height } = props;\n    const windowControls = useAnimation(), textControls = useAnimation(), logoControls = useAnimation();\n    windowControls.start({\n      opacity: 1,\n      width: width / 2,\n      height: height / 2,\n      transition: { ease: \"easeOut\", duration: 1 }\n    });\n\n    textControls.start({\n      opacity: 1,\n      transition: { delay: 1.2, ease: \"easeOut\", duration: 1 }\n    });\n\n    logoControls.start({\n      opacity: 1,\n      y: 25,\n      transition: { delay: 1.2, ease: \"easeOut\", duration: 1 }\n    });\n\n    return (\n      <div className=\"Intro\">\n        <motion.div className=\"Terminal\" initial={{ opacity: 0 }} animate={windowControls}>\n          <div>\n            <motion.h1 initial={{ opacity: 0 }} animate={textControls}>Jack Hu</motion.h1>\n            <motion.p initial={{ opacity: 0 }} animate={textControls}>Professional. Fun-loving. All at the same time. WIP.</motion.p>\n          </div>\n          <div className=\"Logos\">\n            <a href=\"https://www.linkedin.com/in/jackhu242\">\n              <motion.img src={linkedin} initial={{ opacity: 0, width: 50, height: 50 }} animate={logoControls} />\n            </a>\n            <a href=\"https://www.github.com/jh242\">\n              <motion.img src={github} initial={{ opacity: 0, width: 50, height: 50 }} animate={logoControls} />\n            </a>\n            <a href={resume}>\n              <motion.img src={profile} initial={{ opacity: 0, width: 50, height: 50 }} animate={logoControls} />\n            </a>\n          </div>\n        </motion.div>\n        <motion.img src={down} animate={{ y: [0, 10, 0] }} transition={{ ease: \"easeInOut\", loop: \"Infinity\", duration: 1 }} />\n      </div>\n    );\n  }\n\n  render() {\n\n    let { width, height } = this.state;\n\n    return (\n      <div className=\"App\">\n        <this.IntroWindow width={width} height={height} />\n        <div style={{ display: \"flex\", justifyContent: \"space-around\", alignItems: \"center\", flexDirection: width < 1300 ? \"column\" : \"row\", maxWidth: width / 1.5, height: height }}>\n          <div className=\"Bio\">\n            <motion.h2>More about me.</motion.h2>\n            <motion.p>Hi! Thanks for checking out my personal page.\n                I'm currently a student studying Software Engineering at the University of Waterloo.\n                In my spare time, I like to cook, play the piano, or play a few rounds of whatever game I'm into at the time.\n                I'm interested in machine learning and data analysis, along with full stack web/mobile development.\n                Check out what I've been working on at my GitHub! This page is still a work in progress.</motion.p>\n          </div>\n          <motion.img style={{ maxWidth: 600, flex: 1, borderRadius: 20, margin: 20, resize: \"cover\" }} src={me} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}