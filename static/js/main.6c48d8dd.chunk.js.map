{"version":3,"sources":["assets/JackHuResume.pdf","assets/icons/github.svg","assets/icons/linkedin.svg","assets/icons/profile.svg","assets/icons/down.svg","assets/me.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","props","IntroWindow","width","height","windowControls","useAnimation","textControls","logoControls","start","opacity","transition","ease","duration","delay","y","className","div","initial","animate","h1","p","href","img","src","linkedin","github","resume","profile","down","loop","state","updateWindowDimensions","bind","this","window","addEventListener","removeEventListener","setState","innerWidth","innerHeight","style","display","justifyContent","alignItems","flexDirection","maxWidth","h2","flex","borderRadius","margin","resize","me","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+GAAAA,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,0TCwG5BC,E,YAvFb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAkBRC,YAAc,SAACD,GAAW,IAClBE,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,OACPC,EAAiBC,cAAgBC,EAAeD,cAAgBE,EAAeF,cAmBrF,OAlBAD,EAAeI,MAAM,CACnBC,QAAS,EACTP,MAAOA,EAAQ,EACfC,OAAQA,EAAS,EACjBO,WAAY,CAAEC,KAAM,UAAWC,SAAU,KAG3CN,EAAaE,MAAM,CACjBC,QAAS,EACTC,WAAY,CAAEG,MAAO,IAAKF,KAAM,UAAWC,SAAU,KAGvDL,EAAaC,MAAM,CACjBC,QAAS,EACTK,EAAG,GACHJ,WAAY,CAAEG,MAAO,IAAKF,KAAM,UAAWC,SAAU,KAIrD,yBAAKG,UAAU,SACb,kBAAC,IAAOC,IAAR,CAAYD,UAAU,WAAWE,QAAS,CAAER,QAAS,GAAKS,QAASd,GACjE,6BACE,kBAAC,IAAOe,GAAR,CAAWF,QAAS,CAAER,QAAS,GAAKS,QAASZ,GAA7C,WACA,kBAAC,IAAOc,EAAR,CAAUH,QAAS,CAAER,QAAS,GAAKS,QAASZ,GAA5C,yDAEF,yBAAKS,UAAU,SACb,uBAAGM,KAAK,yCACN,kBAAC,IAAOC,IAAR,CAAYC,IAAKC,IAAUP,QAAS,CAAER,QAAS,EAAGP,MAAO,GAAIC,OAAQ,IAAMe,QAASX,KAEtF,uBAAGc,KAAK,gCACN,kBAAC,IAAOC,IAAR,CAAYC,IAAKE,IAAQR,QAAS,CAAER,QAAS,EAAGP,MAAO,GAAIC,OAAQ,IAAMe,QAASX,KAEpF,uBAAGc,KAAMK,KACP,kBAAC,IAAOJ,IAAR,CAAYC,IAAKI,IAASV,QAAS,CAAER,QAAS,EAAGP,MAAO,GAAIC,OAAQ,IAAMe,QAASX,OAIzF,kBAAC,IAAOe,IAAR,CAAYC,IAAKK,IAAMV,QAAS,CAAEJ,EAAG,CAAC,EAAG,GAAI,IAAMJ,WAAY,CAAEC,KAAM,YAAakB,KAAM,WAAYjB,SAAU,OAzDpH,EAAKkB,MAAQ,CAAE5B,MAAO,EAAGC,OAAQ,GACjC,EAAK4B,uBAAyB,EAAKA,uBAAuBC,KAA5B,gBAHb,E,iFAOjBC,KAAKF,yBACLG,OAAOC,iBAAiB,SAAUF,KAAKF,0B,6CAIvCG,OAAOE,oBAAoB,SAAUH,KAAKF,0B,+CAI1CE,KAAKI,SAAS,CAAEnC,MAAOgC,OAAOI,WAAYnC,OAAQ+B,OAAOK,gB,+BAgDjD,IAAD,EAEiBN,KAAKH,MAAvB5B,EAFC,EAEDA,MAAOC,EAFN,EAEMA,OAEb,OACE,yBAAKY,UAAU,OACb,uBAAMd,YAAN,CAAkBC,MAAOA,EAAOC,OAAQA,IACxC,yBAAKqC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,eAAgBC,WAAY,SAAUC,cAAe1C,EAAQ,IAAM,SAAW,MAAO2C,SAAU3C,EAAQ,IAAKC,OAAQ,UACjK,yBAAKY,UAAU,OACb,kBAAC,IAAO+B,GAAR,uBACA,kBAAC,IAAO1B,EAAR,ubAMF,kBAAC,IAAOE,IAAR,CAAYkB,MAAO,CAAEK,SAAU,IAAKE,KAAM,EAAGC,aAAc,GAAIC,OAAQ,GAAIC,OAAQ,SAAW3B,IAAK4B,Y,GAlF3FC,aCHEC,QACW,cAA7BnB,OAAOoB,SAASC,UAEe,UAA7BrB,OAAOoB,SAASC,UAEhBrB,OAAOoB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.6c48d8dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/JackHuResume.02569f51.pdf\";","module.exports = __webpack_public_path__ + \"static/media/github.c2999a9b.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.44173a82.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile.4d52a07f.svg\";","module.exports = __webpack_public_path__ + \"static/media/down.399ce17b.svg\";","module.exports = __webpack_public_path__ + \"static/media/me.e3922b03.jpg\";","//Component imports\r\nimport React, { Component } from 'react';\r\nimport { motion, useAnimation, motionValue, useTransform } from 'framer-motion';\r\n\r\n//Give it some style!\r\nimport './App.css';\r\n\r\n//Asset imports\r\nimport resume from './assets/JackHuResume.pdf';\r\nimport github from './assets/icons/github.svg';\r\nimport linkedin from './assets/icons/linkedin.svg';\r\nimport profile from './assets/icons/profile.svg';\r\nimport down from './assets/icons/down.svg';\r\nimport me from './assets/me.jpg';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { width: 0, height: 0 };\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  updateWindowDimensions() {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  }\r\n\r\n  IntroWindow = (props) => {\r\n    let { width, height } = props;\r\n    const windowControls = useAnimation(), textControls = useAnimation(), logoControls = useAnimation();\r\n    windowControls.start({\r\n      opacity: 1,\r\n      width: width / 2,\r\n      height: height / 2,\r\n      transition: { ease: \"easeOut\", duration: 1 }\r\n    });\r\n\r\n    textControls.start({\r\n      opacity: 1,\r\n      transition: { delay: 1.2, ease: \"easeOut\", duration: 1 }\r\n    });\r\n\r\n    logoControls.start({\r\n      opacity: 1,\r\n      y: 25,\r\n      transition: { delay: 1.2, ease: \"easeOut\", duration: 1 }\r\n    });\r\n\r\n    return (\r\n      <div className=\"Intro\">\r\n        <motion.div className=\"Terminal\" initial={{ opacity: 0 }} animate={windowControls}>\r\n          <div>\r\n            <motion.h1 initial={{ opacity: 0 }} animate={textControls}>Jack Hu</motion.h1>\r\n            <motion.p initial={{ opacity: 0 }} animate={textControls}>Professional. Fun-loving. All at the same time. WIP.</motion.p>\r\n          </div>\r\n          <div className=\"Logos\">\r\n            <a href=\"https://www.linkedin.com/in/jackhu242\">\r\n              <motion.img src={linkedin} initial={{ opacity: 0, width: 50, height: 50 }} animate={logoControls} />\r\n            </a>\r\n            <a href=\"https://www.github.com/jh242\">\r\n              <motion.img src={github} initial={{ opacity: 0, width: 50, height: 50 }} animate={logoControls} />\r\n            </a>\r\n            <a href={resume}>\r\n              <motion.img src={profile} initial={{ opacity: 0, width: 50, height: 50 }} animate={logoControls} />\r\n            </a>\r\n          </div>\r\n        </motion.div>\r\n        <motion.img src={down} animate={{ y: [0, 10, 0] }} transition={{ ease: \"easeInOut\", loop: \"Infinity\", duration: 1 }} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n\r\n    let { width, height } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <this.IntroWindow width={width} height={height} />\r\n        <div style={{ display: \"flex\", justifyContent: \"space-around\", alignItems: \"center\", flexDirection: width < 800 ? \"column\" : \"row\", maxWidth: width / 1.5, height: \"100vh\" }}>\r\n          <div className=\"Bio\">\r\n            <motion.h2>More about me.</motion.h2>\r\n            <motion.p>Hi! Thanks for checking out my personal page.\r\n                I'm currently a student studying Software Engineering at the University of Waterloo.\r\n                In my spare time, I like to cook, play the piano, or play a few rounds of whatever game I'm into at the time.\r\n                I'm interested in machine learning and data analysis, along with full stack web/mobile development.\r\n                Check out what I've been working on at my GitHub! This page is still a work in progress.</motion.p>\r\n          </div>\r\n          <motion.img style={{ maxWidth: 600, flex: 1, borderRadius: 20, margin: 20, resize: \"cover\" }} src={me} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register (config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}